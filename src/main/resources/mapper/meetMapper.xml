<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.apiserver.api.meet.mapper.MeetMapper">
    <select id="findMeetByDistance" resultType="com.hello.apiserver.api.meet.vo.NearMeetVo">
        SELECT
            s.id,
            s.message,
            s.channel_url AS channelUrl,
            s.member_id AS memberId,
            m.name,
            s.reg_dt AS regDt,
            IFNULL(SUM(AA.commentCnt + BB.commentReplyCnt), 0) AS commentCnt,
            m.client_token AS clientToken,
            m.profile_url AS profileUrl,
            m.profile_url_org AS profileUrlOrg,
            m.profile_file AS profileFile,
            s.original_img AS originalImg,
            s.thumbnail_img AS thumbnailImg,
            s.file_name AS fileName,
            s.sortation
        FROM
            meet s
        INNER JOIN
            member m ON s.member_id = m.id AND s.use_yn = 'Y'
            <if test="meetStartDt neq null and meetStartDt neq ''">
                <![CDATA[
                  AND meet_start_dt >= ${meetStartDt}
                ]]>
            </if>
            <if test="meetEndDt neq null and meetEndDt neq ''">
                <![CDATA[
                  AND meet_end_dt <= ${meetEndDt}
                ]]>
            </if>
            <if test="seLat neq null and nwLat neq null and nwLon neq null and seLon neq null">
            AND m.location_lat BETWEEN ${seLat} AND ${nwLat}
            AND m.location_lon BETWEEN ${nwLon} AND ${seLon}
            </if>
            LEFT JOIN
            (SELECT
            s.id AS meet_id, c.id AS comment_id, COUNT(c.id) AS commentCnt
            FROM
            meet s
            LEFT JOIN comment c ON s.id = c.meet_id AND c.sortation = 'M'
            GROUP BY s.id) AS AA ON s.id = AA.meet_id
            LEFT JOIN
            (SELECT
            c.meet_id, c.id, COUNT(r.id) AS commentReplyCnt
            FROM
            comment c
            LEFT JOIN comment_reply r ON c.id = r.comment_id AND c.sortation = 'M'
            GROUP BY c.meet_id) AS BB ON AA.comment_id = BB.id
            -- LEFT JOIN like_say l ON s.id = l.say_id
            GROUP BY s.id
            ORDER BY s.reg_dt DESC
            LIMIT ${page}, 20
    </select>

    <select id="findLikeMemberList" resultType="java.lang.String">
        SELECT member_id AS memberId FROM like_say WHERE meet_id = ${sayId} AND sortation = #{sortation}
    </select>

    <select id="getMeetListByUid" resultType="com.hello.apiserver.api.meet.vo.NearMeetVo">
        SELECT
        s.id,
        s.message,
        s.channel_url AS channelUrl,
        s.member_id AS memberId,
        m.name,
        s.reg_dt AS regDt,
        IFNULL(SUM(AA.commentCnt + BB.commentReplyCnt), 0) AS commentCnt,
        m.client_token AS clientToken,
        m.profile_url AS profileUrl,
        m.profile_url_org AS profileUrlOrg,
        m.profile_file AS profileFile,
        s.original_img AS originalImg,
        s.thumbnail_img AS thumbnailImg,
        s.file_name AS fileName,
        s.sortation
        FROM
        meet s
        INNER JOIN
        member m ON s.member_id = m.id AND s.use_yn = 'Y' AND m.id = #{memberId}
        LEFT JOIN
        (SELECT
        s.id AS meet_id, c.id AS comment_id, COUNT(c.id) AS commentCnt
        FROM
        meet s
        LEFT JOIN comment c ON s.id = c.meet_id AND c.sortation = 'M'
        GROUP BY s.id) AS AA ON s.id = AA.meet_id
        LEFT JOIN
        (SELECT
        c.meet_id, c.id, COUNT(r.id) AS commentReplyCnt
        FROM
        comment c
        LEFT JOIN comment_reply r ON c.id = r.comment_id AND c.sortation = 'M'
        GROUP BY c.meet_id) AS BB ON AA.comment_id = BB.id
        -- LEFT JOIN like_say l ON s.id = l.say_id
        GROUP BY s.id
        ORDER BY s.reg_dt DESC
        LIMIT ${page}, 20
    </select>
</mapper>